package com.face.know;

/**
 * 面向对象基本特征
 */
public class ObjectOriented {
	/**
	 * 面向对象基本特征
	 * 1.封装-增加了代码的复用性
	 * 2.继承-增加了代码的复用性
	 * 3.多态-增加了代码的可移植性、健壮性，灵活性（不同的实现）
	 */

	/**
	 * Java接口和抽象类有哪些区别？
	 * 相同点：
	 * 	1.不能够实例化
	 * 	2.可以将抽象类和接口类型作为引用类型
	 * 	3.一个类如果继承了摸个抽象类或者实现了某个接口都需要对其中的抽象方法全部进行实现，否则该类仍然需要被声明为抽象类
	 * 不同点：
	 * 接口描述是共有特征，抽象类是描述概念(is)
	 * 	1.抽象类中可以定义构造器，接口中不能定义构造器
	 * 	2.抽象类中有抽象方法和具体方法，接口中方法都是抽象方法（可以加default修饰来加具体方法）
	 * 	3.抽象类中的成员可以是private、默认、protected、public ,接口中的成员全是public的
	 * 	4.抽象类中可以定义成员变量，接口中定义的成员变量都是常量
	 * 	5.有抽象方法的类必须被声明为抽象类，而抽象类未必要有抽象方法；
	 * 	6.抽象类中可以包含静态方法；接口中不能有静态方法
	 * 	7.一个类只能继承一个抽象类；一个类可以实现多个接口
	 */
}
